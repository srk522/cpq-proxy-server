<?xml version="1.0" encoding="UTF-8"?>
<record_list>
	<site_version><![CDATA[25.3.3]]></site_version>
	<each_record>
		<category>bm_config_rule</category>
		<action>add</action>
		<id>53432476</id>
		<ref_type><![CDATA[Model]]></ref_type>
		<ref_var_name>
			allEquipment:projectAllocationDetails:projectAllocationProductLine:projectAllocationModel</ref_var_name>
		<name>
			<en><![CDATA[Constraint Allocation Percentage]]></en>
			<de><![CDATA[]]></de>
			<fr><![CDATA[]]></fr>
			<es><![CDATA[]]></es>
			<it><![CDATA[]]></it>
			<ar_SA><![CDATA[]]></ar_SA>
			<zh_CN><![CDATA[]]></zh_CN>
			<zh_TW><![CDATA[]]></zh_TW>
			<cs_CZ><![CDATA[]]></cs_CZ>
			<da_DK><![CDATA[]]></da_DK>
			<nl_NL><![CDATA[]]></nl_NL>
			<fi_FI><![CDATA[]]></fi_FI>
			<fr_CA><![CDATA[]]></fr_CA>
			<iw_IL><![CDATA[]]></iw_IL>
			<hu_HU><![CDATA[]]></hu_HU>
			<ja_JP><![CDATA[]]></ja_JP>
			<ko_KR><![CDATA[]]></ko_KR>
			<pl_PL><![CDATA[]]></pl_PL>
			<pt_BR><![CDATA[]]></pt_BR>
			<ru_RU><![CDATA[]]></ru_RU>
			<sv_SE><![CDATA[]]></sv_SE>
			<no_NO><![CDATA[]]></no_NO>
			<ro_RO><![CDATA[]]></ro_RO>
			<tr_TR><![CDATA[]]></tr_TR>
		</name>
		<variable_name><![CDATA[constraintAllocationPercentage]]></variable_name>
		<description>
			<en><![CDATA[]]></en>
			<de><![CDATA[]]></de>
			<fr><![CDATA[]]></fr>
			<es><![CDATA[]]></es>
			<it><![CDATA[]]></it>
			<ar_SA><![CDATA[]]></ar_SA>
			<zh_CN><![CDATA[]]></zh_CN>
			<zh_TW><![CDATA[]]></zh_TW>
			<cs_CZ><![CDATA[]]></cs_CZ>
			<da_DK><![CDATA[]]></da_DK>
			<nl_NL><![CDATA[]]></nl_NL>
			<fi_FI><![CDATA[]]></fi_FI>
			<fr_CA><![CDATA[]]></fr_CA>
			<iw_IL><![CDATA[]]></iw_IL>
			<hu_HU><![CDATA[]]></hu_HU>
			<ja_JP><![CDATA[]]></ja_JP>
			<ko_KR><![CDATA[]]></ko_KR>
			<pl_PL><![CDATA[]]></pl_PL>
			<pt_BR><![CDATA[]]></pt_BR>
			<ru_RU><![CDATA[]]></ru_RU>
			<sv_SE><![CDATA[]]></sv_SE>
			<no_NO><![CDATA[]]></no_NO>
			<ro_RO><![CDATA[]]></ro_RO>
			<tr_TR><![CDATA[]]></tr_TR>
		</description>
		<rule_area><![CDATA[Configuration]]></rule_area>
		<rule_type><![CDATA[Constraints]]></rule_type>
		<condition_type><![CDATA[Simple]]></condition_type>
		<condition_function>
			<function_script />
		</condition_function>
		<detail_function>
			<function_script />
		</detail_function>
		<comments_type></comments_type>
		<comments></comments>
		<comments_function>
			<function_script />
		</comments_function>
		<start_date />
		<end_date />
		<status><![CDATA[Active]]></status>
		<order_number>3</order_number>
		<rule_format></rule_format>
		<condition_expression><![CDATA[1 AND 2]]></condition_expression>
		<action_type>Standard</action_type>
		<query></query>
		<is_ajax><![CDATA[true]]></is_ajax>
		<bom_config_function_id>-1</bom_config_function_id>
		<bom_variable_name></bom_variable_name>
		<process_variable_name></process_variable_name>
		<action_rule_input_list>
			<action_rule_input>
				<attribute>
					<variable_name><![CDATA[systemConfigurationData]]></variable_name>
					<category><![CDATA[Configurable Attributes]]></category>
				</attribute>
				<guid><![CDATA[006bc165-4ba1-4675-a96c-70910e345108]]></guid>
				<system_config_metadata></system_config_metadata>
			</action_rule_input>
			<action_rule_input>
				<attribute>
					<variable_name><![CDATA[allocationPercentage]]></variable_name>
					<category><![CDATA[Configurable Attributes]]></category>
				</attribute>
				<guid><![CDATA[d71b0bb7-e8d8-47a1-99b1-d712fc005869]]></guid>
				<system_config_metadata></system_config_metadata>
			</action_rule_input>
			<action_rule_input>
				<attribute>
					<variable_name><![CDATA[projectName]]></variable_name>
					<category><![CDATA[Configurable Attributes]]></category>
				</attribute>
				<guid><![CDATA[196c8713-1552-41a9-b5e4-7c4e834894d0]]></guid>
				<system_config_metadata></system_config_metadata>
			</action_rule_input>
			<action_rule_input>
				<attribute>
					<variable_name><![CDATA[startDate]]></variable_name>
					<category><![CDATA[Configurable Attributes]]></category>
				</attribute>
				<guid><![CDATA[1f98a040-e2c8-4c94-9449-7bd213c257d7]]></guid>
				<system_config_metadata></system_config_metadata>
			</action_rule_input>
			<action_rule_input>
				<attribute>
					<variable_name><![CDATA[endDate]]></variable_name>
					<category><![CDATA[Configurable Attributes]]></category>
				</attribute>
				<guid><![CDATA[6d64241e-3cd5-4bfc-b441-5efee7fc9528]]></guid>
				<system_config_metadata></system_config_metadata>
			</action_rule_input>
			<action_rule_input>
				<attribute>
					<variable_name><![CDATA[employeeName]]></variable_name>
					<category><![CDATA[Configurable Attributes]]></category>
				</attribute>
				<guid><![CDATA[7456af37-e840-4f4e-830c-b1f476b20f36]]></guid>
				<system_config_metadata></system_config_metadata>
			</action_rule_input>
			<action_rule_input>
				<attribute>
					<variable_name><![CDATA[modelLevelData]]></variable_name>
					<category><![CDATA[Configurable Attributes]]></category>
				</attribute>
				<guid><![CDATA[f1fb352f-6654-4f28-8096-5961c87b4e2d]]></guid>
				<system_config_metadata></system_config_metadata>
			</action_rule_input>
		</action_rule_input_list>
		<action_list>
			<action>
				<action_type><![CDATA[Advanced]]></action_type>
				<attribute>
					<variable_name><![CDATA[allocationPercentage]]></variable_name>
					<category><![CDATA[Configurable Attributes]]></category>
				</attribute>
				<operator1><![CDATA[=]]></operator1>
				<value1></value1>
				<operator2><![CDATA[]]></operator2>
				<value2></value2>
				<action_function>
					<function_script><![CDATA[/* model level input : {"ProjectName":"Dlr Project","ProjectType":"New Implementation","StartDate":"08/21/2025 00:00:00","EndDate":"08/31/2025 00:00:00","AllocationData":{"101":20}}
systemConfigData imput : [{"ProjectName":"Kps Project","ProjectType":"New Implementation","StartDate":"08/21/2025 00:00:00","EndDate":"08/31/2025 00:00:00","AllocationData":{"101":90}},{"ProjectName":"Dlr Project","ProjectType":"New Implementation","StartDate":"08/21/2025 00:00:00","EndDate":"08/31/2025 00:00:00","AllocationData":{"101":10}}]
it raises error when the above input is used
*/
IS_DEBUG = false;
if (allocationPercentage == 0){
	if (IS_DEBUG){
		print allocationPercentage ;
	}
	
	//It raises when the allocation percentage is zero
	return 0;
}
if (systemConfigurationData == "[]" ){
	modelLevelData_Json = json(modelLevelData);
	allocVal = jsonget(jsonget(modelLevelData_Json,"AllocationData","json"),employeeName,"integer");	
	if(allocVal > 100){
		if (IS_DEBUG){
			print allocationPercentage;
			print allocVal;
			print allocationPercentage - (allocVal - 100);
		}
		//It Raises when only one project added in the first row if we directly enter greater than 100
		return allocationPercentage;
	}
}
flag = false;
if (systemConfigurationData <> ""){
	systemConfigArr = jsonarray(systemConfigurationData);
	totalAlloc = 0;
	sizeOf_systemConfigArr = range(jsonarraysize(systemConfigArr));
	if (IS_DEBUG){
		print systemConfigArr;
	}
	for index in sizeOf_systemConfigArr{
		existingProjectName = jsonget(jsonarrayget(systemConfigArr,index,"json"),"ProjectName");
		if(projectName == existingProjectName){
			flag = true;
			modelLevelData_Json = json(modelLevelData);
			allocVal = jsonget(jsonget(modelLevelData_Json,"AllocationData","json"),employeeName,"integer");
			print "alloc"+string(allocVal);	
			if(allocVal + totalAlloc > 100){
				if (IS_DEBUG){
					print allocationPercentage;
					print allocVal;
					print 100 -(allocVal - allocationPercentage);
				}
				
				//It raises when we add only one project in the root array set if we enter greater than 100 in a single project with multiple rows(if we add two projects at the root array set it does not raise)
				
				return allocationPercentage;
			}
			else{
				totalAlloc = totalAlloc + allocVal; 
				continue;
			}
			
		}
		
		
		indexwiseData = jsonarrayget(systemConfigArr,index,"json");
		//converting to date format
		s_date = jsonget(indexwiseData,"StartDate");
		e_date = jsonget(indexwiseData,"EndDate");
		startDateVar  = strtodate(s_date , "%m/%d/%Y" );
		endDateVar = strtodate(e_date , "%m/%d/%Y" );
		allocationData = jsonget(indexwiseData,"AllocationData");
		allocJson = json(allocationData);
		if (comparedates(startDateVar ,startDate) <= 0 AND comparedates(endDateVar,startDate) == 1){
			totalAlloc = totalAlloc + jsonget(allocJson,employeeName,"integer",0); 

		}
		if(flag){
			if(totalAlloc > 100){
				if (IS_DEBUG){
					print allocationPercentage;
					print 100 - (totalAlloc - allocationPercentage);
				}
	
				//After the error raises if we jump to the other model then this raises an error to that model also. We need to adjust in any model to avoid this constraint 
				return allocationPercentage;
			}
		}
		else{
			if(totalAlloc + allocationPercentage> 100){
				if(IS_DEBUG){
					print 100 - totalAlloc ;
				}
				//In one model you have entered less than 100 then in the other model if you exceed 100 then this error raises
				return allocationPercentage;
			}
		}
		
		
	}
}
return 0;]]></function_script>
				</action_function>
				<set_type><![CDATA[None]]></set_type>
				<comments_type><![CDATA[Advanced]]></comments_type>
				<comments>
					<en><![CDATA[]]></en>
					<de><![CDATA[]]></de>
					<fr><![CDATA[]]></fr>
					<es><![CDATA[]]></es>
					<it><![CDATA[]]></it>
					<ar_SA><![CDATA[]]></ar_SA>
					<zh_CN><![CDATA[]]></zh_CN>
					<zh_TW><![CDATA[]]></zh_TW>
					<cs_CZ><![CDATA[]]></cs_CZ>
					<da_DK><![CDATA[]]></da_DK>
					<nl_NL><![CDATA[]]></nl_NL>
					<fi_FI><![CDATA[]]></fi_FI>
					<fr_CA><![CDATA[]]></fr_CA>
					<iw_IL><![CDATA[]]></iw_IL>
					<hu_HU><![CDATA[]]></hu_HU>
					<ja_JP><![CDATA[]]></ja_JP>
					<ko_KR><![CDATA[]]></ko_KR>
					<pl_PL><![CDATA[]]></pl_PL>
					<pt_BR><![CDATA[]]></pt_BR>
					<ru_RU><![CDATA[]]></ru_RU>
					<sv_SE><![CDATA[]]></sv_SE>
					<no_NO><![CDATA[]]></no_NO>
					<ro_RO><![CDATA[]]></ro_RO>
					<tr_TR><![CDATA[]]></tr_TR>
				</comments>
				<comments_function>
					<function_script><![CDATA[IS_DEBUG = false;
if (allocationPercentage == 0){
	if (IS_DEBUG){
		print allocationPercentage ;
	}
	
	//It raises when the allocation percentage is zero
	return "The Allocation Percentage must be non zero";
}

if (systemConfigurationData == "[]" ){
	modelLevelData_Json = json(modelLevelData);
	allocVal = jsonget(jsonget(modelLevelData_Json,"AllocationData","json"),employeeName,"integer");	
	if(allocVal > 100){
		if (IS_DEBUG){
			print allocationPercentage;
			print allocVal;
			print allocationPercentage - (allocVal - 100);
		}
		
		//It Raises when only one project added in the first row if we directly enter greater than 100
		return "The Remaining Allocation is "+string(allocationPercentage - (allocVal - 100))+" but you entered "+string(allocationPercentage);
		
	}
}
flag = false;
if (systemConfigurationData <> ""){
	systemConfigArr = jsonarray(systemConfigurationData);
	totalAlloc = 0;
	sizeOf_systemConfigArr = range(jsonarraysize(systemConfigArr));
	if (IS_DEBUG){
		print systemConfigArr;
	}
	for index in sizeOf_systemConfigArr{
		existingProjectName = jsonget(jsonarrayget(systemConfigArr,index,"json"),"ProjectName");
		if(projectName == existingProjectName){
			flag = true;
			modelLevelData_Json = json(modelLevelData);
			allocVal = jsonget(jsonget(modelLevelData_Json,"AllocationData","json"),employeeName,"integer");
			print "alloc"+string(allocVal);	
			if(allocVal + totalAlloc > 100){
				if (IS_DEBUG){
					print allocationPercentage;
					print allocVal;
					print 100 -(allocVal - allocationPercentage);
				}
				
				//It raises when we add only one project in the root array set if we enter greater than 100 in a single project with multiple rows(if we add two projects at the root array set it does not raise)
				return "The Remaining Allocation is "+string(100 -(allocVal - allocationPercentage))+" but you entered "+string(allocationPercentage);
			}
			else{
				totalAlloc = totalAlloc + allocVal; 
				continue;
			}
			
		}
		
		indexwiseData = jsonarrayget(systemConfigArr,index,"json");
		//converting to date format
		s_date = jsonget(indexwiseData,"StartDate");
		e_date = jsonget(indexwiseData,"EndDate");
		startDateVar  = strtodate(s_date , "%m/%d/%Y" );
		endDateVar = strtodate(e_date , "%m/%d/%Y" );
		allocationData = jsonget(indexwiseData,"AllocationData");
		allocJson = json(allocationData);
		//Comparing the entered start date value with the existing start date and end date
		if (comparedates(startDateVar ,startDate) <= 0 AND comparedates(endDateVar,startDate) == 1){
			totalAlloc = totalAlloc + jsonget(allocJson,employeeName,"integer",0); 
		}
		if(flag){
			if(totalAlloc > 100){
				if (IS_DEBUG){
					print allocationPercentage;
					print 100 - (totalAlloc - allocationPercentage);
				}
				
				//After the error raises if we jump to the other model then this raises an error to that model also. We need to adjust in any model to avoid this constraint 
				return "The Remaining Allocation is "+string(100 - (totalAlloc - allocationPercentage))+". Please check the Allocation percentage in other models for the same resource and try to adjust where ever you want to";
			}
		}
		else{
			if(totalAlloc + allocationPercentage> 100){
				if(IS_DEBUG){
					print 100 - totalAlloc ;
				}
				//In one model you have entered less than 100 then in the other model if you exceed 100 then this error raises
				return "74 "+"The Remaining Allocation is "+string(100 - totalAlloc )+" but you entered "+string(allocationPercentage);
			}
		}
		
		
	}
}
return "0";]]></function_script>
				</comments_function>
				<constraint_type><![CDATA[Constraint]]></constraint_type>
				<guid><![CDATA[d49afc39-4767-483d-b6c9-650829d0585c]]></guid>
				<constrain_all>0</constrain_all>
				<constraint_display_override><![CDATA[NO_OVERRIDE]]></constraint_display_override>
				<value_type><![CDATA[Simple]]></value_type>
				<filter_attribute>-1</filter_attribute>
				<formula></formula>
				<property></property>
				<filter_property></filter_property>
				<property_values></property_values>
			</action>
		</action_list>
		<condition_list>
			<condition>
				<attribute>
					<variable_name><![CDATA[employeeName]]></variable_name>
					<category><![CDATA[Configurable Attributes]]></category>
				</attribute>
				<operator1><![CDATA[Not =]]></operator1>
				<value1></value1>
				<operator2><![CDATA[]]></operator2>
				<value2></value2>
				<rule_input_index>1</rule_input_index>
				<guid><![CDATA[6a19fd92-e04d-4b20-8183-19998ee03703]]></guid>
				<value_type><![CDATA[Static]]></value_type>
				<attribute_value></attribute_value>
				<criteria_type><![CDATA[Attribute]]></criteria_type>
				<property></property>
				<include_quantity><![CDATA[False]]></include_quantity>
				<property_filter_operator><![CDATA[]]></property_filter_operator>
				<property_filter_value></property_filter_value>
				<function></function>
				<value_property></value_property>
				<formula></formula>
				<system_config_metadata></system_config_metadata>
				<function_attributes></function_attributes>
				<function_properties></function_properties>
			</condition>
			<condition>
				<attribute>
					<variable_name><![CDATA[allocationPercentage]]></variable_name>
					<category><![CDATA[Configurable Attributes]]></category>
				</attribute>
				<operator1><![CDATA[>]]></operator1>
				<value1><![CDATA[0]]></value1>
				<operator2><![CDATA[]]></operator2>
				<value2></value2>
				<rule_input_index>2</rule_input_index>
				<guid><![CDATA[ca931c76-ad81-4858-91b7-39df8fa65e38]]></guid>
				<value_type><![CDATA[Static]]></value_type>
				<attribute_value></attribute_value>
				<criteria_type><![CDATA[Attribute]]></criteria_type>
				<property></property>
				<include_quantity><![CDATA[False]]></include_quantity>
				<property_filter_operator><![CDATA[]]></property_filter_operator>
				<property_filter_value></property_filter_value>
				<function></function>
				<value_property></value_property>
				<formula></formula>
				<system_config_metadata></system_config_metadata>
				<function_attributes></function_attributes>
				<function_properties></function_properties>
			</condition>
		</condition_list>
	</each_record>
</record_list>